metadata:
- description: "\n            This ruleset provides analysis of applications that
    use Hibernate 5.1 and may require\n            individual attention when migrating
    to Hibernate 5.3.\n        "
  dependencies:
    addon:
    - id: org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final
    - id: org.jboss.windup.rules,windup-rules-java,3.0.0.Final
  sourceTechnology:
  - id: hibernate
    versionRange: (,5.1]
  targetTechnology:
  - id: hibernate
    versionRange: '[5.3,)'
  - id: eap
    versionRange: '[7,8)'
  tag:
  - hibernate
rules:
  rule:
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: '{methods_param}({*}org.hibernate.engine.spi.SessionImplementor{*})'
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionImplementor` parameter has to be
          changed to `org.hibernate.engine.spi.SharedSessionContractImplementor`.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_51_compatiblity_transformer
        tag:
        - hibernate
        title: Hibernate 5.3 - SessionImplementor parameter changed to SharedSessionContractImplementor
        category-id: mandatory
        effort: 1
    where:
    - matches:
      - value: ""
        pattern: (org.hibernate.usertype.UserVersionType.next|org.hibernate.type.VersionType.next|org.hibernate.type.SingleColumnType.set|org.hibernate.type.AbstractStandardBasicType.set|org.hibernate.type.Type.resolve|org.hibernate.usertype.UserVersionType.seed|org.hibernate.type.VersionType.seed|org.hibernate.collection.spi.PersistentCollection.setCurrentSession|org.hibernate.type.ProcedureParameterNamedBinder.nullSafeSet|org.hibernate.type.Type.nullSafeSet|org.hibernate.usertype.UserType.nullSafeSet|org.hibernate.usertype.CompositeUserType.nullSafeSet|org.hibernate.type.Type.beforeAssemble|org.hibernate.type.AbstractStandardBasicType.nullSafeGet|org.hibernate.type.Type.nullSafeGet|org.hibernate.type.SingleColumnType.nullSafeGet|org.hibernate.usertype.UserType.nullSafeGet|org.hibernate.usertype.CompositeUserType.nullSafeGet|org.hibernate.type.Type.replace|org.hibernate.usertype.CompositeUserType.replace|org.hibernate.usertype.UserCollectionType.replaceElements|org.hibernate.collection.spi.PersistentCollection.unsetSession|org.hibernate.type.Type.hydrate|org.hibernate.type.Type.semiResolve|org.hibernate.usertype.CompositeUserType.assemble|org.hibernate.type.Type.assemble|org.hibernate.usertype.UserCollectionType.instantiate|org.hibernate.usertype.CompositeUserType.disassemble|org.hibernate.type.Type.disassemble|org.hibernate.type.ProcedureParameterExtractionAware.extract|org.hibernate.type.Type.isDirty|org.hibernate.type.Type.isModified|org.hibernate.type.SingleColumnType.get|org.hibernate.type.AbstractStandardBasicType.get|org.hibernate.usertype.UserCollectionType.wrap)
      param: methods_param
  - when:
      project:
      - artifact:
          value: ""
          groupId: org.hibernate
          artifactId: '{substitution}'
      not:
      - project:
        - artifact:
            value: ""
            groupId: org.hibernate
            artifactId: hibernate-core
    perform:
      hint:
      - message: 'change reference to hibernate-java8 to hibernate-core (since hibernate-java8
          has been merged into hibernate-core module) '
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        title: Hibernate 5.3 - hibernate-java8 module has been merged into hibernate-core
          and the Java 8 date/time types are now natively supported.
        category-id: mandatory
        effort: 1
    where:
    - matches:
      - value: ""
        pattern: (hibernate-java8|hibernate-entitymanager)
      param: substitution
  - when:
      javaclass:
      - location:
        - IMPORT
        references: org.hibernate.{className}
    perform:
      hint:
      - message: |2-
           If the `SessionFactory` is built via Hibernateâ€™s native bootstrapping and `org.hibernate.HibernateException` or a subclass is referenced by the application
                                  then set `hibernate.native_exception_handling_51_compliance` configuration property to `true`.
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#exception_handling_changes_between_51_53
        tag:
        - hibernate
        title: Hibernate 5.3 - Exception Handling
        category-id: mandatory
        effort: 1
    where:
    - matches:
      - value: ""
        pattern: |-
          (boot.archive.spi.ArchiveException|envers.exception.AuditException|jdbc.BatchFailedException|cache.CacheException|CallbackException
          |boot.registry.classloading.spi.ClassLoadingException|tool.schema.spi.CommandAcceptanceException|bytecode.enhance.spi.EnhancementException
          |tuple.entity.EntityMetamodel.ValueGenerationStrategyException|event.service.spi.EventListenerRegistrationException|HibernateError
          |id.IdentifierGenerationException|boot.model.naming.IllegalIdentifierException|tool.hbm2ddl.ImportScriptException
          |boot.spi.InFlightMetadataCollector.DuplicateSecondaryTableException|InstantiationException|secure.spi.IntegrationException|JDBCException
          |engine.jndi.JndiException|engine.jndi.JndiNameException|engine.transaction.jta.platform.spi.JtaPlatformException|LazyInitializationException
          |resource.transaction.LocalSynchronizationException|dialect.lock.LockingStrategyException|MappingException|loader.MultipleBagFetchException
          |procedure.NamedParametersNotSupportedException|result.NoMoreReturnsException|loader.custom.NonUniqueDiscoveredSqlAliasException
          |NonUniqueObjectException|NonUniqueResultException|procedure.NoSuchParameterException|bytecode.spi.NotInstrumentedException
          |service.NullServiceException|resource.transaction.NullSynchronizationException|procedure.ParameterMisuseException
          |engine.query.ParameterRecognitionException|procedure.ParameterStrategyException|PersistentObjectException|property.access.spi.PropertyAccessBuildingException
          |PropertyAccessException|property.access.spi.PropertyAccessSerializationException|PropertyValueException|QueryException
          |loader.plan.spi.QuerySpaceUidNotRegisteredException|ResourceClosedException|tool.schema.extract.spi.SchemaExtractionException|tool.schema.spi.SchemaManagementException
          |type.SerializationException|service.spi.ServiceException|SessionException|StaleStateException|boot.registry.selector.spi.StrategySelectionException
          |context.TenantIdentifierMismatchException|jdbc.TooManyRowsAffectedException|TransactionException|resource.transaction.TransactionRequiredForJoinException
          |TransientObjectException|TypeMismatchException|cache.spi.access.UnknownAccessTypeException|persister.spi.UnknownPersisterException|UnknownProfileException
          |service.UnknownServiceException|service.UnknownUnwrapTypeException|UnresolvableObjectException|UnsupportedLockAttemptException|WrongClassException)
      param: className
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache()
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache()`
          should be used instead of `SessionFactoryImplementor.getQueryCache()` method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getCache().getDefaultQueryResultsCache()
          search: getQueryCache()
          type: REPLACE
          name: SessionFactoryImplementor.getQueryCache
        title: Hibernate 5.3 - SessionFactoryImplementor.getQueryCache() method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache({*}String{*})
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache(String
          regionName)` should be used instead of `SessionFactoryImplementor.getQueryCache(String
          regionName)` method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getCache().getQueryResultsCache(
          search: getQueryCache(
          type: REPLACE
          name: SessionFactoryImplementor.getQueryCache
        title: Hibernate 5.3 - SessionFactoryImplementor.getQueryCache(String regionName)
          method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getUpdateTimestampsCache()
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getTimestampsCache()`
          should be used instead of `SessionFactoryImplementor.getUpdateTimestampsCache()`
          method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getCache().getTimestampsCache()
          search: getUpdateTimestampsCache()
          type: REPLACE
          name: SessionFactoryImplementor.getUpdateTimestampsCache
        title: Hibernate 5.3 - SessionFactoryImplementor.getUpdateTimestampsCache()
          method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegion({*}String{*})
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
          regionName)` should be used instead of `SessionFactoryImplementor.getSecondLevelCacheRegion(String
          regionName)` method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getCache().getRegion(
          search: getSecondLevelCacheRegion(
          type: REPLACE
          name: SessionFactoryImplementor.getSecondLevelCacheRegion
        title: Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegion(String
          regionName) method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy({*}String{*})
    perform:
      hint:
      - message: "\n                        Depending on the type of region, the appropriate
          method should be used instead:  \n\n                        * For an entity
          cache region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
          entityName ).getCacheAccessStrategy()` should be used instead\n                        *
          For a collection region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().collectionPersister(
          role ).getCacheAccessStrategy()` should be used instead\n                        *
          For a natural ID region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
          entityName ).getNaturalIdCacheAccessStrategy()` should be used instead\n
          \                   "
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        title: Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy(String
          regionName) method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegion({*}String{*})
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
          regionName)` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegion(String
          regionName)` method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getCache().getRegion(
          search: getNaturalIdCacheRegion(
          type: REPLACE
          name: SessionFactoryImplementor.getNaturalIdCacheRegion
        title: Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegion(String
          regionName) method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy({*}String{*})
    perform:
      hint:
      - message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
          entityName ).getNaturalIdCacheAccessStrategy()` should be used instead of
          `SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String
          regionName)` method.'
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getMetamodel().entityPersister( entityName ).getNaturalIdCacheAccessStrategy(
          search: getNaturalIdCacheRegionAccessStrategy(
          type: REPLACE
          name: SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy
        title: Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String
          regionName) method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.engine.spi.SessionFactoryImplementor.getAllSecondLevelCacheRegions()
    perform:
      hint:
      - message: "\n                        `org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getCacheRegionNames()`
          should be used to obtain all cache region names, then `org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
          regionName)` should be used to look up each region.\n                    "
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        title: Hibernate 5.3 - SessionFactoryImplementor.getAllSecondLevelCacheRegions()
          method removed
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        references: org.hibernate.{className}
    perform:
      hint:
      - message: "Review usage of classes in `org.hibernate.cache.spi.RegionFactory`,
          as SPIs for this class has changed.  \n                        See Javadoc
          for `org.hibernate.cache.spi.RegionFactory` for details."
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        - value: ""
          title: Javadoc for org.hibernate.cache.spi.RegionFactory
          href: https://docs.jboss.org/hibernate/orm/5.3/javadocs/org/hibernate/cache/spi/RegionFactory.html
        tag:
        - hibernate
        title: Hibernate 5.3 - RegionFactory usage
        category-id: mandatory
        effort: 3
    where:
    - matches:
      - value: ""
        pattern: (cache.RegionFactory|cache.spi.RegionFactory|cache.spi.AbstractRegionFactory|testing.cache.CachingRegionFactory|cache.spi.support.RegionFactoryTemplate|cache.ehcache.EhCacheRegionFactory|cache.infinispan.InfinispanRegionFactory|cache.infinispan.JndiInfinispanRegionFactory|cache.internal.NoCachingRegionFactory|cache.ehcache.SingletonEhCacheRegionFactory)
      param: className
  - when:
      javaclass:
      - location:
        - IMPLEMENTS_TYPE
        references: org.hibernate.cache.spi.QueryCacheFactory
    perform:
      hint:
      - message: "\n                        One potential upgrade concern is any custom
          `org.hibernate.cache.spi.QueryCacheFactory` implementations.  \n                        `org.hibernate.cache.spi.QueryCacheFactory`
          was meant as a means to allow service providers the ability to define query
          result caching, generally with more stale-tolerant query result invalidation
          handling.  \n                        However, the contract also bound it
          to the old second level cache contracts so they had to be updated.  \n                        Its
          responsibilities also changed so we also decided to \"rename it\" to `org.hibernate.cache.spi.TimestampsCacheFactory`.
          \ \n                        Details can be found in HHH-11356 JIRA issue
          (link below).\n                    "
        link:
        - value: ""
          title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider SPI
            changes'
          href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
        - value: ""
          title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
            uses'
          href: https://hibernate.atlassian.net/browse/HHH-11356
        tag:
        - hibernate
        title: Hibernate 5.3 - org.hibernate.cache.spi.QueryCacheFactory implementations
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: org.hibernate.stat.{interfaces}.getEntries()
    perform:
      hint:
      - message: "\n                        A change to be aware of is accessing cache
          entries via `SecondLevelCacheStatistics.getEntries()` and `NaturalIdCacheStatistics.getEntries()`.
          \ \n                        These methods have been deprecated, however
          the new caching SPI does not really require caching providers to support
          this.  \n                        As of Hibernate 5.3 these methods inherently
          return an empty Map (`Collections#emptyMap`).  \n                        This
          has always been something that providers did not implement \"correctly\"
          anyway.  \n                        Details can be found in HHH-11356 JIRA
          issue (link below).\n                    "
        link:
        - value: ""
          title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider SPI
            changes'
          href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
        - value: ""
          title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
            uses'
          href: https://hibernate.atlassian.net/browse/HHH-11356
        tag:
        - hibernate
        title: 'Hibernate 5.3 - SecondLevelCacheStatistics.getEntries() and NaturalIdCacheStatistics.getEntries():
          deprecated methods'
        category-id: optional
        effort: 1
    where:
    - matches:
      - value: ""
        pattern: (SecondLevelCacheStatistics|NaturalIdCacheStatistics)
      param: interfaces
  - when:
      javaclass:
      - location:
        - METHOD
        references: '{*}.getEntries()'
    perform:
      iteration:
      - when:
          javaclass:
          - location:
            - INHERITANCE
            - IMPLEMENTS_TYPE
            references: org.hibernate.stat.NaturalIdCacheStatistics
        perform:
          hint:
          - message: "\n                                A change to be aware of is
              accessing cache entries via `NaturalIdCacheStatistics.getEntries()`.
              \ \n                                This method has been deprecated,
              however the new caching SPI does not really require caching providers
              to support this.  \n                                As of Hibernate
              5.3 this method inherently return an empty Map (`Collections#emptyMap`).
              \ \n                                This has always been something that
              providers did not implement \"correctly\" anyway.  \n                                Details
              can be found in HHH-11356 JIRA issue (link below).\n                            "
            link:
            - value: ""
              title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
                SPI changes'
              href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
            - value: ""
              title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
                ORM 5.3'
              href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
            - value: ""
              title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
                uses'
              href: https://hibernate.atlassian.net/browse/HHH-11356
            tag:
            - hibernate
            title: Hibernate 5.3 - NaturalIdCacheStatistics.getEntries() deprecated
              method
            category-id: optional
            effort: 1
  - when:
      javaclass:
      - location:
        - METHOD
        references: '{*}.getEntries()'
    perform:
      iteration:
      - when:
          javaclass:
          - location:
            - INHERITANCE
            - IMPLEMENTS_TYPE
            references: org.hibernate.stat.SecondLevelCacheStatistics
        perform:
          hint:
          - message: "\n                                A change to be aware of is
              accessing cache entries via `SecondLevelCacheStatistics.getEntries()`.
              \  \n                                This method has been deprecated,
              however the new caching SPI does not really require caching providers
              to support this.  \n                                As of Hibernate
              5.3 these methods inherently return an empty Map (`Collections#emptyMap`).
              \ \n                                This has always been something that
              providers did not implement \"correctly\" anyway.  \n                                Details
              can be found in HHH-11356 JIRA issue (link below).\n                            "
            link:
            - value: ""
              title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
                SPI changes'
              href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
            - value: ""
              title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
                ORM 5.3'
              href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
            - value: ""
              title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
                uses'
              href: https://hibernate.atlassian.net/browse/HHH-11356
            tag:
            - hibernate
            title: Hibernate 5.3 - SecondLevelCacheStatistics.getEntries() deprecated
              method
            category-id: optional
            effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        references: org.hibernate.{packages}.{*}
    perform:
      hint:
      - message: "\n                        The SPIs in the `org.hibernate.{packages}`
          package have changed.  \n                        Any custom classes using
          those SPIs will need to be reviewed and updated.  \n                        See
          Javadoc for these packages for details.\n                    "
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        - value: ""
          title: Hibernate 5.3 JavaDoc
          href: http://docs.jboss.org/hibernate/orm/5.3/javadocs/
        tag:
        - hibernate
        title: Hibernate 5.3 - SPI in package org.hibernate.{packages} changed
        category-id: mandatory
        effort: 3
    where:
    - matches:
      - value: ""
        pattern: (persister|tuple)
      param: packages
  - when:
      and:
      - xmlfile:
        - namespace:
          - value: ""
            prefix: s
            uri: http://java.sun.com/xml/ns/persistence
          as: persistence_files
          matches: //s:persistence-unit/s:provider[starts-with(text(), 'org.hibernate')]
        - namespace:
          - value: ""
            prefix: s
            uri: http://java.sun.com/xml/ns/persistence
          as: wrong_files
          matches: //s:properties[count(s:property[@name='hibernate.default_schema'])=0
            and count(s:property[@name='hibernate.default_catalog'])=0]
          from: persistence_files
    perform:
      iteration:
      - hint:
        - message: Define `hibernate.default_schema` or `hibernate.default_catalog`
            (whichever is used by the selected dialect), or, alternatively, set `hibernate.hbm2ddl.jdbc_metadata_extraction_strategy=individually`.
          link:
          - value: ""
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
            href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#schema_management_tooling_changes_71
          tag:
          - hibernate
          title: Hibernate 5.3 - default_schema or default_catalog must be defined
            or set jdbc_metadata_extraction_strategy
          category-id: mandatory
          effort: 1
        over: wrong_files
  - when:
      xmlfile:
      - namespace:
        - value: ""
          prefix: s
          uri: http://java.sun.com/xml/ns/persistence
        as: persistence_files
        matches: //s:persistence-unit[not(s:provider) or s:provider[not(text())]]
      - namespace:
        - value: ""
          prefix: s
          uri: http://java.sun.com/xml/ns/persistence
        as: wrong_files
        matches: //s:properties[count(s:property[@name='hibernate.default_schema'])=0
          and count(s:property[@name='hibernate.default_catalog'])=0]
        from: persistence_files
    perform:
      iteration:
      - hint:
        - message: If the application uses Hibernate, please define `hibernate.default_schema`
            or `hibernate.default_catalog` (whichever is used by the selected dialect),
            or, alternatively, set `hibernate.hbm2ddl.jdbc_metadata_extraction_strategy=individually`.
          link:
          - value: ""
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
            href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#schema_management_tooling_changes_71
          tag:
          - hibernate
          title: Hibernate 5.3 - default_schema or default_catalog must be defined
            or set jdbc_metadata_extraction_strategy
          category-id: potential
          effort: 1
        over: wrong_files
  - when:
      javaclass:
      - location:
        - IMPORT
        references: javax.persistence.TableGenerator
    perform:
      hint:
      - message: Applications using the `@TableGenerator` should set the `hibernate.id.generator.stored_last_used`
          configuration property to `false`.
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
        tag:
        - hibernate
        title: Hibernate 5.3  - @TableGenerator changes interpretation
        category-id: potential
        effort: 1
  - when:
      javaclass:
      - references: org.hibernate.{className}.getType({*})
    perform:
      hint:
      - message: Any references to `org.hibernate.{className}.getType()` must be replaced
          with `org.hibernate.{className}.getHibernateType()`.
        link:
        - value: ""
          title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
            ORM 5.3'
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
        tag:
        - hibernate
        quickfix:
        - replacement: getHibernateType
          search: getType
          type: REPLACE
          name: HibernateQueryParametergetType
        title: Hibernate 5.3 - QueryParameter.getType() renamed
        category-id: mandatory
        effort: 1
    where:
    - matches:
      - value: ""
        pattern: (engine.query.spi.NamedParameterDescriptor|engine.query.spi.OrdinalParameterDescriptor|query.procedure.internal.ProcedureParameterImpl|query.internal.QueryParameterImpl|query.internal.QueryParameterNamedImpl)
      param: className
sourceFile: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap7/eap71/hibernate51-53.windup.xml
