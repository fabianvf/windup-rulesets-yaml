metadata:
- description: "\n            This ruleset contains rules to detect WebLogic specific
    web services code, and to assist in the conversion of this code to code that is
    compatible with JBoss EAP 7+.\n        "
  dependencies:
    addon:
    - id: org.jboss.windup.rules,windup-rules-javaee,2.7.0.Final
    - id: org.jboss.windup.rules,windup-rules-java,2.7.0.Final
  sourceTechnology:
  - id: weblogic
  targetTechnology:
  - id: eap
    versionRange: '[7,8)'
  tag:
  - webservice
  - weblogic
rules:
  rule:
  - when:
      javaclass:
      - location:
        - INHERITANCE
        references: weblogic.wsee.jaxrpc.ServiceImpl
    perform:
      hint:
      - message: "\n                      \n                      This web service
          stub uses the WebLogic proprietary web service implementation class (\"weblogic.wsee.jaxrpc.ServiceImpl\").\n
          \                     It might have been generated by a WebLogic proprietary
          tool.\n\n                      This should be replaced using the standard
          Java EE JAX-WS framework. It could be regenerated using the JBoss web services
          tools.\n                      Please refer to the [Developing JAX-WS Web
          Services](https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#developing_jax_ws_web_services)
          guide for more information.\n                      \n                    "
        link:
        - value: ""
          title: Developing JAX-WS Web Services
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#developing_jax_ws_web_services
        tag:
        - webservice
        - weblogic
        title: WebLogic proprietary web service implementation class
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - references: weblogic.wsee.async.AsyncPreCallContext
    perform:
      hint:
      - message: "\n                      \n                      The [WebLogic proprietary
          Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm)
          should be replaced using calls to the JAX-WS asynchronous API.\n\n                      More
          information is available in the [JAX-WS Web Service Clients](https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html).\n
          \                     \n                    "
        link:
        - value: ""
          title: WebLogic Asynchronous Execution Documentation
          href: https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm
        - value: ""
          title: JAX-WS Web Service Clients
          href: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html
        tag:
        - webservice
        - client
        - weblogic
        title: WebLogic asynchronous web service client
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: weblogic.wsee.connection.transport.http.HttpTransportInfo.setUsername({*})
    perform:
      hint:
      - message: "\n                      \n                        Replace proprietary
          web-service authentication with JAX-WS standard calls. To attach authentication
          with JBoss EAP, simply use the following code:\n\n                        ```java\n
          \                       URL wsdlURL = new File(\"resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl\").toURL();\n
          \                       QName qname = new QName(\"http://org.jboss.ws/jaxws/context\",
          \"TestEndpointService\");\n                        Service service = Service.create(wsdlURL,
          qname);\n                        port = (TestEndpoint)service.getPort(TestEndpoint.class);\n\n
          \                       BindingProvider bp = (BindingProvider)port;\n                        bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,
          \"jsmith\");\n                        bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,
          \"PaSSw0rd\");\n                        ```\n                      \n                    "
        link:
        - value: ""
          title: Securing JAX-WS Web Services
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#ws_sec_ws
        tag:
        - webservice
        - security
        - weblogic
        title: WebLogic proprietary web service authentication
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - references: weblogic.wsee.context.WebServiceContext
    perform:
      hint:
      - message: "\n                      \n                      This code uses the
          WebLogic specific class `weblogic.wsee.context.WebServiceContext`. This
          usage will need to be replaced with the Java Enterprise Edition standard
          `javax.xml.WebServiceContext` interface.\n\n                      Example
          code:\n\n                      ```java\n                          @Resource\n
          \                         private WebServiceContext webServiceContext;\n
          \                     ```\n                      \n                    "
        link:
        - value: ""
          title: javax.xml.WebServiceContext Documentation
          href: http://docs.oracle.com/javaee/7/api/javax/xml/ws/WebServiceContext.html
        tag:
        - webservice
        - context
        - weblogic
        title: WebLogic proprietary web services API - weblogic.wsee.context.WebServiceContext
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - references: weblogic.wsee.context.ContextNotFoundException
    perform:
      hint:
      - message: "\n                        This exception (`weblogic.wsee.context.ContextNotFoundException`)
          is WebLogic specific and can be removed.\n                    "
        tag:
        - webservice
        - context
        - weblogic
        title: WebLogic proprietary web services API - ContextNotFoundException
        category-id: mandatory
        effort: 1
  - when:
      or:
      - javaclass:
        - references: weblogic.wsee.tools.clientgen.{*}
        - references: weblogic.webservice.{*}
    perform:
      hint:
      - message: "\n                      \n                      This class has been
          generated by a WebLogic web service client generator (ClientGen).\n\n                      It
          could be replaced by an equivalent standard Java EE technology using for
          example the EAP 7 wsconsume tool, the wsgen tool or the CXF tools.\n                      \n
          \                   "
        link:
        - value: ""
          title: Oracle ClientGen Ant Task Reference
          href: https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270
        - value: ""
          title: Developing Web Services Applications - Using JAX-WS Tools
          href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#using_jax_ws_tools
        - value: ""
          title: JAX-WS - wsgen
          href: https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen
        - value: ""
          title: Apache CXF tools
          href: https://cxf.apache.org/docs/tools.html
        tag:
        - webservice
        - client
        - weblogic
        title: WebLogic proprietary web services generated client classes
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - ANNOTATION
        references: weblogic.jws.Transactional
    perform:
      hint:
      - message: "\n                        \n                      Replace WebLogic
          proprietary web-service annotation `@Transactional` by the standard Java
          EE annotation `@TransactionAttribute`.\n                      \n                    "
        link:
        - value: ""
          title: WebLogic-specific Annotations - Transactional
          href: https://docs.oracle.com/middleware/11119/wls/WSREF/annotations.htm#i1058163
        - value: ""
          title: JBoss EAP 7 - API TransactionAttribute
          href: https://access.redhat.com/webassets/avalon/d/red-hat-jboss-enterprise-application-platform/7.0.0/javadocs/javax/ejb/TransactionAttribute.html
        tag:
        - webservice
        - weblogic
        title: WebLogic proprietary web service annotation @Transactional
        category-id: mandatory
        effort: 3
sourceFile: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap7/weblogic/weblogic-webservices.windup.xml
