metadata:
- description: "\n            This ruleset contains rules that assist in migrating
    from Sonic ESB to Apache Camel.\n        "
  dependencies:
    addon:
    - id: org.jboss.windup.rules,windup-rules-java,2.3.0.Final
  sourceTechnology:
  - id: sonic
  targetTechnology:
  - id: fuse
    versionRange: '[6,)'
  tag:
  - sonic-esb
  - camel
rules:
  rule:
  - when:
      javaclass:
      - location:
        - INHERITANCE
        references: com.sonicsw.xq.XQService
    perform:
      classification:
      - link:
        - value: ""
          title: XQService Javadoc
          href: http://documentation.progress.com/output/Sonic/8.0.0/Docs8.0/api/esb_api/com/sonicsw/xq/XQService.html
        tag:
        - sonic-esb
        title: Sonic ESB Service
        issue-display-mode: detail-only
      hint:
      - message: "\n                       \n                       Sonic ESB services
          inherit from XQService.  In Camel, this can be achieved through the simple
          Java Bean Camel Component.\n\n                       * [Camel Java Bean
          Component](http://camel.apache.org/bean.html)\n                       \n
          \                    "
        tag:
        - camel
        title: Sonic ESB service - inheritance from com.sonicsw.xq.XQService
        category-id: mandatory
        effort: 4
  - when:
      javaclass:
      - location:
        - TYPE
        - IMPORT
        references: com.sonicsw.xq.XQServiceContext
    perform:
      hint:
      - message: "\n                       \n                       Sonic ESB services
          leverage the service(XQServiceContext context) method to implement business
          logic.  When messages are routed to the service, the service(XQServiceContext
          context) method is executed.\n                       In Camel, this is achieved
          by routing messages to the Java Bean via the Camel Route's Bean Component
          syntax.\n\n                       * [Camel Java Bean Component](http://camel.apache.org/bean.html)\n
          \                      * [Camel Binding Annotations](http://camel.apache.org/parameter-binding-annotations.html)\n\n
          \                      Camel's Java Bean Component can leverage annotations
          annotations on the method to specify how Camel Message body values are mapped
          to the method parameters.  Additionally, the @Handler annotation can be
          leveraged to setup the default Java Bean method.\n\n                       **For
          example:**\n\n                       ```java\n                       public
          void service(XQServiceContext ctx) throws XQServiceException \\{\n                       ...\n
          \                      }\n                       ```\n\n                       **Should
          become:**\n\n                       ```java\n                       @Handler\n
          \                      public void service(@Header messageHeader, @Body
          messageBody, Exchange exchange) \\{\n                       ...\n                       }\n
          \                      ```\n\n                       * org.apache.camel.Body\n
          \                      * org.apache.camel.Header\n                       *
          org.apache.camel.Exchange\n                       \n                     "
        tag:
        - sonic-esb
        - camel
        title: Reference to com.sonicsw.xq.XQServiceContext
        category-id: mandatory
        effort: 4
  - when:
      javaclass:
      - location:
        - TYPE
        - IMPORT
        references: com.sonicsw.xq.XQInitContext
    perform:
      hint:
      - message: "\n                       \n                       The XQInitContext
          is used to receive initialization information for the service from Sonic
          ESB.\n\n                       This is not neccessary for Camel.  The init()
          method that receives this object should be replaced with Spring Bean property
          injection.  For initialization beyond propery injection, leverage Spring's
          @PostConstruct annotation on this init() method.\n\n                       *
          [Spring @PostConstruct Documentation](http://docs.spring.io/spring/docs/2.5.x/reference/beans.html#beans-postconstruct-and-predestroy-annotations)\n\n
          \                      ```java\n                       @PostConstruct\n
          \                      public void init() \\{\n                       //leverage
          injected properties\n                       }\n                       ```\n
          \                      \n                     "
        tag:
        - sonic-esb
        - spring
        - camel
        title: Reference to com.sonicsw.xq.XQInitContext
        category-id: mandatory
        effort: 4
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQInitContext.getParameters{*}
    perform:
      hint:
      - message: Migrate XQInitContext.getParameters to Spring property injection.
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQInitContext.getParameters
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQParameters.getParameter{*}
    perform:
      hint:
      - message: Migrate XQParameters.getParameter to Spring property injection.
        tag:
        - sonic-esb
        - spring
        - camel
        title: Call of com.sonicsw.xq.XQParameters.getParameter
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQParameters
    perform:
      hint:
      - message: Migrate XQParameters to Spring property injection.
        tag:
        - sonic-esb
        - spring
        - camel
        title: Reference to com.sonicsw.xq.XQParameters
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQParameterInfo
    perform:
      hint:
      - message: Migrate XQParameterInfo to Spring property injection.
        tag:
        - sonic-esb
        - spring
        - camel
        title: Reference to com.sonicsw.xq.XQParameters
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQMessage
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message
        tag:
        - sonic-esb
        - camel
        title: Reference to com.sonicsw.xq.XQMessage
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.getHeaderValue{*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.getHeader(String name)
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.getHeaderValue
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.setHeaderValue{*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.setHeader(String name, Object
          value)
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.setHeaderValue
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.getHeaderNames{*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.getHeaders()
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.getHeaderNames
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQPart
    perform:
      hint:
      - message: Migrate XQPart to an attachment on the org.apache.camel.Message
        tag:
        - sonic-esb
        - camel
        title: Reference to com.sonicsw.xq.XQPart
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.getPartCount{*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.getAttachments().size()
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.getPartCount
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.getPart({*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.getAttachment(String id)
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.getPart
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQLog
    perform:
      hint:
      - message: "\n                        Migrate to [Apache SLF4J](http://www.slf4j.org).\n
          \                    "
        tag:
        - sonic-esb
        - slf4j
        - camel
        title: Reference to com.sonicsw.xq.XQLog
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - IMPORT
        - TYPE
        references: com.sonicsw.xq.XQServiceException
    perform:
      hint:
      - message: "\n                       \n                       Create a custom
          ServiceException class, extending Exception.  The documentation below explains
          exception handling in Camel.\n\n                       * [Camel Exception
          Handling](http://camel.apache.org/exception-clause.html)\n                       \n
          \                    "
        tag:
        - sonic-esb
        - camel
        title: 'Reference to com.sonicsw.xq.XQServiceException '
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQMessage.getCorrelationId{*}
    perform:
      hint:
      - message: "\n                       \n                       Correlation is
          handled several ways in Camel.  Read the article below.\n\n                       *
          [Camel Exception Handling](http://camel.apache.org/correlation-identifier.html)\n
          \                      "
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQMessage.getCorrelationId
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQAddressFactory.createEndpointAddress{*}
    perform:
      hint:
      - message: "\n                       \n                       This indicates
          that the Sonic ESB Service is routing messages to a [1...N] endpoints.  To
          achieve this in Camel, take the business logic in the service, and populate
          a header property with an array of target enpoints.\n\n                       Next,
          create a Recipient List processor to route the message to N endpoints.\n\n
          \                      * [Camel Recipient List](http://camel.apache.org/recipientlist-annotation.html)\n
          \                      \n                     "
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQAddressFactory.createEndpointAddress
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQServiceContext.addOutgoing{*}
    perform:
      hint:
      - message: "\n                       \n                       Sonic ESB uses
          the addOutgoing method to set the outgoing message.\n                       This
          is achieved in Camel by either modifying the @Body parameter in the Java
          Bean Component method, or literally setting a new message to the Exchange.\n\n
          \                      * [Camel Setting Response](http://camel.apache.org/using-getin-or-getout-methods-on-exchange.html)\n
          \                      \n                     "
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQServiceContext.addOutgoing
        category-id: mandatory
        effort: 1
  - when:
      javaclass:
      - location:
        - TYPE
        - IMPORT
        references: com.sonicsw.xq.XQEnvelope
    perform:
      hint:
      - message: Migrate to org.apache.camel.Exchange
        tag:
        - sonic-esb
        - camel
        title: Reference to com.sonicsw.xq.XQEnvelope
        category-id: mandatory
        effort: 3
  - when:
      javaclass:
      - location:
        - METHOD_CALL
        references: com.sonicsw.xq.XQEnvelope.getMessage{*}
    perform:
      hint:
      - message: Migrate to org.apache.camel.Message.getIn()
        tag:
        - sonic-esb
        - camel
        title: Call of com.sonicsw.xq.XQEnvelope.getMessage
        category-id: mandatory
        effort: 1
sourceFile: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/fuse/sonicesb/sonic-esb.windup.xml
