metadata:
- description: "\n            This ruleset detects Java Native Interface (JNI) and
    Java Native Access (JNA) code, which may be problematic when migrating an application
    to a cloud environment.\n        "
  dependencies:
    addon:
    - id: org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final
    - id: org.jboss.windup.rules,windup-rules-java,3.0.0.Final
  targetTechnology:
  - id: cloud-readiness
  tag:
  - jni
rules:
  rule:
  - when:
      or:
      - javaclass:
        - location:
          - METHOD_CALL
          references: java.lang.System.load({*})
        - location:
          - METHOD_CALL
          references: java.lang.System.loadLibrary({*})
        - location:
          - METHOD_CALL
          references: java.lang.System.mapLibraryName({*})
        - location:
          - METHOD_CALL
          references: java.lang.Runtime.load({*})
        - location:
          - METHOD_CALL
          references: java.lang.Runtime.loadLibrary({*})
        - location:
          - CONSTRUCTOR_CALL
          - IMPORT
          - INHERITANCE
          - METHOD_CALL
          - VARIABLE_DECLARATION
          references: com.sun.jna.{*}
    perform:
      hint:
      - message: "\n                    Java native libraries might not run in a cloud
          or container environment.\n\n                    Recommendations\n\n                    *
          Review the purpose of the native library in your application.\n                    *
          Check whether the native library is compatible with a cloud environment.\n
          \                   * Reuse or embed the native library or application in
          a cloud environment, for example, in a JBoss module.\n                    *
          Replace, remove, or rewrite the native library or application using a cloud-compatible
          equivalent.\n                "
        link:
        - value: ""
          title: How to load native libraries and access them via JNI in EAP (with
            or without a module)
          href: https://access.redhat.com/solutions/229443
        - value: ""
          title: Is it supported to compile the JNI code as 32-bit shared libraries
            and use it in 64-bit compiled Java code ?
          href: https://access.redhat.com/solutions/1444643
        tag:
        - jni
        title: Java native libraries (JNI, JNA)
        category-id: cloud-mandatory
        effort: 7
sourceFile: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openshift/jni-native-code.windup.xml
