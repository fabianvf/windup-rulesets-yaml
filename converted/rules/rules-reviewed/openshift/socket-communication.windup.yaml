metadata:
- description: "\n            This ruleset detects the use of socket communication
    by the client or server, which may be problematic when migrating an application
    to a cloud environment.\n        "
  dependencies:
    addon:
    - id: org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final
    - id: org.jboss.windup.rules,windup-rules-java,3.0.0.Final
  sourceTechnology:
  - id: java
  - id: java-ee
  targetTechnology:
  - id: cloud-readiness
  tag:
  - socket
rules:
  rule:
  - when:
      or:
      - javaclass:
        - references: java.net.{socketclass}{*}
        - references: java.net.ServerSocket{*}
        - references: java.nio.channels.AsynchronousServerSocketChannel{*}
        - references: java.nio.channels.ServerSocketChannel{*}
    perform:
      iteration:
      - hint:
        - message: "\n                    Java sockets are internal endpoints of two-way
            communications. They are defined by an IP address, port, and protocol
            (TCP/UDP).\n\n                    Socket communication is not suitable
            for a cloud environment because it requires fixed communication with a
            target host.\n\n                    Recommendation: Use Java EE standard
            or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing
            service interactions.\n                    "
          link:
          - value: ""
            title: Twelve-factor app - Backing services
            href: https://12factor.net/backing-services
          tag:
          - socket
          title: Socket communication
          category-id: cloud-optional
          effort: 5
    where:
    - matches:
      - value: ""
        pattern: (Socket|MulticastSocket|DatagramSocket|InetSocketAddress)
      param: socketclass
  - when:
      javaclass:
      - references: java.nio.channels.{niochannelclass}{*}
    perform:
      iteration:
      - hint:
        - message: "\n                    Java NIO channels provide bulk data transfer
            to and from NIO buffers. They can be synchronously and asynchronously
            read and written.\n\n                    Channels are not suitable for
            a cloud environment because they are not a reliable or scalable way to
            interact with other systems.\n\n                    Recommendation: Use
            Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or
            JAX-WS for backing service interactions.\n                    "
          link:
          - value: ""
            title: Twelve-factor app - Backing services
            href: https://12factor.net/backing-services
          tag:
          - socket
          title: Java NIO channel
          category-id: cloud-optional
          effort: 5
    where:
    - matches:
      - value: ""
        pattern: (NetworkChannel|MulticastChannel|DatagramChannel|AsynchronousSocketChannel|SocketChannel)
      param: niochannelclass
sourceFile: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openshift/socket-communication.windup.xml
